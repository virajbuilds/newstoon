import type { ShareProvider, ShareConfig } from '../types';
import { watermarkService } from '../../watermark';

export class WhatsAppProvider implements ShareProvider {
  private isMobileDevice(): boolean {
    return /Android|iPhone|iPad|iPod/i.test(navigator.userAgent);
  }

  private formatShareText(config: ShareConfig): string {
    return [
      `ðŸ“° "${config.title}"`,
      '',
      `ðŸ“… ${new Date().toLocaleDateString('en-US', { month: 'long', day: 'numeric', year: 'numeric' })}`,
      `ðŸ”— Read full story: ${config.url}`,
      '',
      'âœ¨ Generated by News2oon AI'
    ].join('\n');
  }

  async share(config: ShareConfig): Promise<boolean> {
    try {
      const shareText = this.formatShareText(config);
      const isMobile = this.isMobileDevice();

      if (config.image) {
        const file = await watermarkService.addWatermark(config.image);
        const shareData = {
          files: [file],
          text: shareText
        };

        if (isMobile) {
          if (navigator.share && navigator.canShare?.(shareData)) {
            await navigator.share(shareData);
            return true;
          }
          window.location.href = `whatsapp://send?text=${encodeURIComponent(shareText)}`;
        } else {
          window.open(`https://web.whatsapp.com/send?text=${encodeURIComponent(shareText)}`, '_blank');
        }
        return true;
      }
      return false;
    } catch (error) {
      console.error('WhatsApp share error:', error);
      return false;
    }
  }
}